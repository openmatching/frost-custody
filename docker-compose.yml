services:
  # Traditional Multisig Nodes (ports 3000-3002)
  multisig-node0:
    image: frost-mpc:latest
    build: .
    container_name: multisig-node-0
    entrypoint: ["multisig-signer"]
    volumes:
      - ./config-node0.toml:/etc/config.toml:ro
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - signer-net

  multisig-node1:
    image: frost-mpc:latest
    container_name: multisig-node-1
    entrypoint: ["multisig-signer"]
    volumes:
      - ./config-node1.toml:/etc/config.toml:ro
    ports:
      - "3001:3000"
    restart: unless-stopped
    networks:
      - signer-net

  multisig-node2:
    image: frost-mpc:latest
    container_name: multisig-node-2
    entrypoint: ["multisig-signer"]
    volumes:
      - ./config-node2.toml:/etc/config.toml:ro
    ports:
      - "3002:3000"
    restart: unless-stopped
    networks:
      - signer-net

  # FROST Signer Nodes (ports 4000-4002, internal only)
  # All nodes use SoftHSM for PKCS#11 key storage
  frost-node0:
    image: frost-mpc:latest
    container_name: frost-signer-node-0
    entrypoint: ["frost-service"]
    volumes:
      - ./frost-config-node0.toml:/etc/config.toml:ro
      - frost-softhsm-node0:/var/lib/softhsm/tokens # SoftHSM token storage
      - frost-data-node0:/data # FROST key shares
    environment:
      - RUST_LOG=info
    networks:
      - frost-internal
    # No external ports - only aggregator can reach
    # role = "node" in config
    # Unlock HSM via API: curl -X POST http://frost-node0:4000/api/hsm/unlock -d '{"pin":"123456"}'

  frost-node1:
    image: frost-mpc:latest
    container_name: frost-signer-node-1
    command: ["frost-service"]
    volumes:
      - ./frost-config-node1.toml:/etc/config.toml:ro
      - frost-softhsm-node1:/var/lib/softhsm/tokens
      - frost-data-node1:/data
    environment:
      - RUST_LOG=info
      - NODE_INDEX=1
    networks:
      - frost-internal

  frost-node2:
    image: frost-mpc:latest
    container_name: frost-signer-node-2
    command: ["frost-service"]
    volumes:
      - ./frost-config-node2.toml:/etc/config.toml:ro
      - frost-softhsm-node2:/var/lib/softhsm/tokens
      - frost-data-node2:/data
    environment:
      - RUST_LOG=info
      - NODE_INDEX=2
    networks:
      - frost-internal

  # FROST Address Aggregator (port 9000, exposed to CEX, LOW RISK)
  address-aggregator:
    image: frost-mpc:latest
    container_name: address-aggregator
    entrypoint: ["frost-service"]
    volumes:
      - ./address-config.toml:/etc/config.toml:ro
    ports:
      - "9000:9000"
    restart: unless-stopped
    networks:
      - frost-internal
      - cex-network
    depends_on:
      - frost-node0
      - frost-node1
      - frost-node2
    # role = "address" in config

  # FROST Signing Aggregator (port 8000, HIGH RISK - RESTRICT ACCESS!)
  signing-aggregator:
    image: frost-mpc:latest
    container_name: signing-aggregator
    entrypoint: ["frost-service"]
    volumes:
      - ./signing-config.toml:/etc/config.toml:ro
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - frost-internal
      - cex-network
    depends_on:
      - frost-node0
      - frost-node1
      - frost-node2
    # role = "signer" in config

networks:
  signer-net:
    driver: bridge
  frost-internal:
    driver: bridge
    internal: true # No external access - signers isolated!
  cex-network:
    driver: bridge
    # CEX backend connects here

volumes:
  # SoftHSM token storage (persistent, contains HSM keys)
  frost-softhsm-node0:
  frost-softhsm-node1:
  frost-softhsm-node2:
  # FROST key shares storage
  frost-data-node0:
  frost-data-node1:
  frost-data-node2:
# ============================================================================
# FROST MPC - Multi-Party Computation threshold signing system
# ============================================================================
#
# Architecture:
#   - 3 FROST signer nodes (internal network, HSM-backed)
#   - 1 Address aggregator (low-risk, CEX-facing)
#   - 1 Signing aggregator (high-risk, restricted access)
#   - 3 Traditional multisig nodes (legacy support)
#
# SoftHSM Setup:
#   Before first run, initialize HSM tokens:
#   1. ./scripts/init-softhsm.sh node0
#   2. ./scripts/init-softhsm.sh node1
#   3. ./scripts/init-softhsm.sh node2
#
#   Or let containers auto-initialize (slower first startup)
#
# Deployment profiles:
#   docker-compose up multisig-node0 multisig-node1 multisig-node2
#     → Traditional multisig only
#
#   docker-compose up frost-node0 frost-node1 frost-node2 address-aggregator signing-aggregator
#     → FROST MPC cluster
#
#   docker-compose up
#     → All services
#
# Security:
#   - FROST nodes: No external ports, HSM-backed keys
#   - Address aggregator: Port 9000 (safe to expose to CEX)
#   - Signing aggregator: Port 8000 (HIGH RISK - firewall required!)
#
# For production HSM (YubiKey, CloudHSM), see MIGRATION.md
