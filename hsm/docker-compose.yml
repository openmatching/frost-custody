# Docker Compose with SoftHSM for PKCS#11 Testing
#
# Usage:
#   docker-compose -f docker-compose.softhsm.yml up
#
# This setup uses SoftHSM (software HSM) for testing PKCS#11 integration
# without requiring physical hardware like YubiKey.
#
# NOTE: SoftHSM is for TESTING ONLY - do not use in production!

services:
  # FROST Signer Nodes with SoftHSM
  frost-node0:
    image: frost-mpc-softhsm:latest
    build:
      context: ..
      dockerfile: Dockerfile.softhsm
    container_name: frost-signer-node-0-softhsm
    entrypoint: ["docker-entrypoint.sh", "frost-service"]
    volumes:
      - ./node-00.toml:/etc/config.toml:ro
      - ./softhsm/node0:/var/lib/softhsm
      - ./data/node0:/data
    environment:
      - USE_SOFTHSM=true
      - HSM_KEY_LABEL=frost-node-0
      - HSM_PIN=1234
      - HSM_SO_PIN=0000
    networks:
      - frost-internal

  frost-node1:
    image: frost-mpc-softhsm:latest
    container_name: frost-signer-node-1-softhsm
    entrypoint: ["docker-entrypoint.sh", "frost-service"]
    volumes:
      - ./node-01.toml:/etc/config.toml:ro
      - ./softhsm/node1:/var/lib/softhsm
      - ./data/node1:/data
    environment:
      - USE_SOFTHSM=true
      - HSM_KEY_LABEL=frost-node-1
      - HSM_PIN=1234
      - HSM_SO_PIN=0000
    networks:
      - frost-internal

  frost-node2:
    image: frost-mpc-softhsm:latest
    container_name: frost-signer-node-2-softhsm
    entrypoint: ["docker-entrypoint.sh", "frost-service"]
    volumes:
      - ./node-02.toml:/etc/config.toml:ro
      - ./softhsm/node2:/var/lib/softhsm
      - ./data/node2:/data
    environment:
      - USE_SOFTHSM=true
      - HSM_KEY_LABEL=frost-node-2
      - HSM_PIN=1234
      - HSM_SO_PIN=0000
    networks:
      - frost-internal

  # FROST Address Aggregator (port 9000 for regular, 9100 for testing)
  address-aggregator:
    image: frost-mpc-softhsm:latest
    container_name: address-aggregator-softhsm
    entrypoint: ["docker-entrypoint.sh", "frost-service"]
    volumes:
      - ./aggregator.toml:/etc/config.toml:ro
    ports:
      - "9000:9000" # Regular API
      - "9100:9000" # Test port (for dkg_latency_test)
    restart: unless-stopped
    networks:
      - frost-internal
      - cex-network
    depends_on:
      - frost-node0
      - frost-node1
      - frost-node2

  # FROST Signing Aggregator (port 8000, HIGH RISK)
  signing-aggregator:
    image: frost-mpc-softhsm:latest
    container_name: signing-aggregator-softhsm
    entrypoint: ["docker-entrypoint.sh", "frost-service"]
    volumes:
      - ./signing.toml:/etc/config.toml:ro
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - frost-internal
      - cex-network
    depends_on:
      - frost-node0
      - frost-node1
      - frost-node2

networks:
  frost-internal:
    driver: bridge
    internal: true # No external access - signers isolated!
  cex-network:
    driver: bridge
